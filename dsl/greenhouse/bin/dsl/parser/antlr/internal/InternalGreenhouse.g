/*
 * generated by Xtext 2.25.0
 */
grammar InternalGreenhouse;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dsl.services.GreenhouseGrammarAccess;

}

@parser::members {

 	private GreenhouseGrammarAccess grammarAccess;

    public InternalGreenhouseParser(TokenStream input, GreenhouseGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected GreenhouseGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSettingsSettingParserRuleCall_2_0());
				}
				lv_settings_2_0=ruleSetting
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"settings",
						lv_settings_2_0,
						"dsl.Greenhouse.Setting");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getGreenhousesGreenhouseParserRuleCall_3_0());
				}
				lv_greenhouses_3_0=ruleGreenhouse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"greenhouses",
						lv_greenhouses_3_0,
						"dsl.Greenhouse.Greenhouse");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSetting
entryRuleSetting returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingRule()); }
	iv_ruleSetting=ruleSetting
	{ $current=$iv_ruleSetting.current; }
	EOF;

// Rule Setting
ruleSetting returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='setting'
		{
			newLeafNode(otherlv_0, grammarAccess.getSettingAccess().getSettingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSettingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSettingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingAccess().getSettingActuatorSettingActuatorParserRuleCall_2_0());
				}
				lv_settingActuator_2_0=ruleSettingActuator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingRule());
					}
					add(
						$current,
						"settingActuator",
						lv_settingActuator_2_0,
						"dsl.Greenhouse.SettingActuator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingAccess().getSettingSensorSettingSensorParserRuleCall_3_0());
				}
				lv_settingSensor_3_0=ruleSettingSensor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingRule());
					}
					add(
						$current,
						"settingSensor",
						lv_settingSensor_3_0,
						"dsl.Greenhouse.SettingSensor");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSettingActuator
entryRuleSettingActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingActuatorRule()); }
	iv_ruleSettingActuator=ruleSettingActuator
	{ $current=$iv_ruleSettingActuator.current; }
	EOF;

// Rule SettingActuator
ruleSettingActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getSettingActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSettingActuatorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSettingActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='has'
		{
			newLeafNode(otherlv_2, grammarAccess.getSettingActuatorAccess().getHasKeyword_2());
		}
		otherlv_3='action'
		{
			newLeafNode(otherlv_3, grammarAccess.getSettingActuatorAccess().getActionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingActuatorAccess().getSettingActionSettingActionParserRuleCall_4_0());
				}
				lv_settingAction_4_0=ruleSettingAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingActuatorRule());
					}
					add(
						$current,
						"settingAction",
						lv_settingAction_4_0,
						"dsl.Greenhouse.SettingAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSettingActuatorAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSettingActuatorAccess().getSettingActionSettingActionParserRuleCall_5_1_0());
					}
					lv_settingAction_6_0=ruleSettingAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSettingActuatorRule());
						}
						add(
							$current,
							"settingAction",
							lv_settingAction_6_0,
							"dsl.Greenhouse.SettingAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='and'
		{
			newLeafNode(otherlv_7, grammarAccess.getSettingActuatorAccess().getAndKeyword_6());
		}
		otherlv_8='listens'
		{
			newLeafNode(otherlv_8, grammarAccess.getSettingActuatorAccess().getListensKeyword_7());
		}
		otherlv_9='on'
		{
			newLeafNode(otherlv_9, grammarAccess.getSettingActuatorAccess().getOnKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingActuatorAccess().getTopicTopicParserRuleCall_9_0());
				}
				lv_topic_10_0=ruleTopic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingActuatorRule());
					}
					set(
						$current,
						"topic",
						lv_topic_10_0,
						"dsl.Greenhouse.Topic");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSettingSensor
entryRuleSettingSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingSensorRule()); }
	iv_ruleSettingSensor=ruleSettingSensor
	{ $current=$iv_ruleSettingSensor.current; }
	EOF;

// Rule SettingSensor
ruleSettingSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSettingSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSettingSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSettingSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='publishes'
		{
			newLeafNode(otherlv_2, grammarAccess.getSettingSensorAccess().getPublishesKeyword_2());
		}
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getSettingSensorAccess().getToKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingSensorAccess().getTopicTopicParserRuleCall_4_0());
				}
				lv_topic_4_0=ruleTopic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingSensorRule());
					}
					set(
						$current,
						"topic",
						lv_topic_4_0,
						"dsl.Greenhouse.Topic");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTopic
entryRuleTopic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopicRule()); }
	iv_ruleTopic=ruleTopic
	{ $current=$iv_ruleTopic.current; }
	EOF;

// Rule Topic
ruleTopic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='topic'
		{
			newLeafNode(otherlv_0, grammarAccess.getTopicAccess().getTopicKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTopicAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTopicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSettingAction
entryRuleSettingAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingActionRule()); }
	iv_ruleSettingAction=ruleSettingAction
	{ $current=$iv_ruleSettingAction.current; }
	EOF;

// Rule SettingAction
ruleSettingAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSettingActionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSettingActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='with'
		{
			newLeafNode(otherlv_1, grammarAccess.getSettingActionAccess().getWithKeyword_1());
		}
		otherlv_2='values'
		{
			newLeafNode(otherlv_2, grammarAccess.getSettingActionAccess().getValuesKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingActionAccess().getSettingValueSettingValueParserRuleCall_3_0());
				}
				lv_settingValue_3_0=ruleSettingValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingActionRule());
					}
					add(
						$current,
						"settingValue",
						lv_settingValue_3_0,
						"dsl.Greenhouse.SettingValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSettingActionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSettingActionAccess().getSettingValueSettingValueParserRuleCall_4_1_0());
					}
					lv_settingValue_5_0=ruleSettingValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSettingActionRule());
						}
						add(
							$current,
							"settingValue",
							lv_settingValue_5_0,
							"dsl.Greenhouse.SettingValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSettingValue
entryRuleSettingValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingValueRule()); }
	iv_ruleSettingValue=ruleSettingValue
	{ $current=$iv_ruleSettingValue.current; }
	EOF;

// Rule SettingValue
ruleSettingValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_INT
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSettingValueAccess().getNameINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSettingValueRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleGreenhouse
entryRuleGreenhouse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseRule()); }
	iv_ruleGreenhouse=ruleGreenhouse
	{ $current=$iv_ruleGreenhouse.current; }
	EOF;

// Rule Greenhouse
ruleGreenhouse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='greenhouse'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseAccess().getGreenhouseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGreenhouseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseAccess().getRowRowParserRuleCall_2_0());
				}
				lv_row_2_0=ruleRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseRule());
					}
					add(
						$current,
						"row",
						lv_row_2_0,
						"dsl.Greenhouse.Row");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseAccess().getElementsGreenhouseElementParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleGreenhouseElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"dsl.Greenhouse.GreenhouseElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='row'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowAccess().getRowKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='includes'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowAccess().getIncludesKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowAccess().getElementsRowElementParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleRowElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"dsl.Greenhouse.RowElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGreenhouseElement
entryRuleGreenhouseElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseElementRule()); }
	iv_ruleGreenhouseElement=ruleGreenhouseElement
	{ $current=$iv_ruleGreenhouseElement.current; }
	EOF;

// Rule GreenhouseElement
ruleGreenhouseElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGreenhouseElementAccess().getGreenhouseSensorParserRuleCall_0());
		}
		this_GreenhouseSensor_0=ruleGreenhouseSensor
		{
			$current = $this_GreenhouseSensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGreenhouseElementAccess().getGreenhouseActuatorParserRuleCall_1());
		}
		this_GreenhouseActuator_1=ruleGreenhouseActuator
		{
			$current = $this_GreenhouseActuator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGreenhouseElementAccess().getGreenhouseRuleSetParserRuleCall_2());
		}
		this_GreenhouseRuleSet_2=ruleGreenhouseRuleSet
		{
			$current = $this_GreenhouseRuleSet_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRowElement
entryRuleRowElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowElementRule()); }
	iv_ruleRowElement=ruleRowElement
	{ $current=$iv_ruleRowElement.current; }
	EOF;

// Rule RowElement
ruleRowElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRowElementAccess().getRowSensorParserRuleCall_0());
		}
		this_RowSensor_0=ruleRowSensor
		{
			$current = $this_RowSensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRowElementAccess().getRowActuatorParserRuleCall_1());
		}
		this_RowActuator_1=ruleRowActuator
		{
			$current = $this_RowActuator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRowElementAccess().getRowRuleSetParserRuleCall_2());
		}
		this_RowRuleSet_2=ruleRowRuleSet
		{
			$current = $this_RowRuleSet_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGreenhouseActuator
entryRuleGreenhouseActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseActuatorRule()); }
	iv_ruleGreenhouseActuator=ruleGreenhouseActuator
	{ $current=$iv_ruleGreenhouseActuator.current; }
	EOF;

// Rule GreenhouseActuator
ruleGreenhouseActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='global'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseActuatorAccess().getGlobalKeyword_0());
		}
		otherlv_1='actuator'
		{
			newLeafNode(otherlv_1, grammarAccess.getGreenhouseActuatorAccess().getActuatorKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGreenhouseActuatorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='can'
			{
				newLeafNode(otherlv_3, grammarAccess.getGreenhouseActuatorAccess().getCanKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_3_1_0());
					}
					lv_action_4_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGreenhouseActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_4_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getGreenhouseActuatorAccess().getCommaKeyword_4_0());
			}
			otherlv_6='can'
			{
				newLeafNode(otherlv_6, grammarAccess.getGreenhouseActuatorAccess().getCanKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_4_2_0());
					}
					lv_action_7_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGreenhouseActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_7_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRowActuator
entryRuleRowActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowActuatorRule()); }
	iv_ruleRowActuator=ruleRowActuator
	{ $current=$iv_ruleRowActuator.current; }
	EOF;

// Rule RowActuator
ruleRowActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRowActuatorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='can'
			{
				newLeafNode(otherlv_2, grammarAccess.getRowActuatorAccess().getCanKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowActuatorAccess().getActionActionParserRuleCall_2_1_0());
					}
					lv_action_3_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_3_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRowActuatorAccess().getCommaKeyword_3_0());
			}
			otherlv_5='can'
			{
				newLeafNode(otherlv_5, grammarAccess.getRowActuatorAccess().getCanKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowActuatorAccess().getActionActionParserRuleCall_3_2_0());
					}
					lv_action_6_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowActuatorRule());
						}
						add(
							$current,
							"action",
							lv_action_6_0,
							"dsl.Greenhouse.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleGreenhouseSensor
entryRuleGreenhouseSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseSensorRule()); }
	iv_ruleGreenhouseSensor=ruleGreenhouseSensor
	{ $current=$iv_ruleGreenhouseSensor.current; }
	EOF;

// Rule GreenhouseSensor
ruleGreenhouseSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='global'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseSensorAccess().getGlobalKeyword_0());
		}
		otherlv_1='sensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getGreenhouseSensorAccess().getSensorKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGreenhouseSensorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='has'
		{
			newLeafNode(otherlv_3, grammarAccess.getGreenhouseSensorAccess().getHasKeyword_3());
		}
		otherlv_4='value'
		{
			newLeafNode(otherlv_4, grammarAccess.getGreenhouseSensorAccess().getValueKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseSensorAccess().getVariableVariableParserRuleCall_5_0());
				}
				lv_variable_5_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseSensorRule());
					}
					set(
						$current,
						"variable",
						lv_variable_5_0,
						"dsl.Greenhouse.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_6_0());
				}
				lv_states_6_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGreenhouseSensorRule());
					}
					add(
						$current,
						"states",
						lv_states_6_0,
						"dsl.Greenhouse.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getGreenhouseSensorAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_7_1_0());
					}
					lv_states_8_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGreenhouseSensorRule());
						}
						add(
							$current,
							"states",
							lv_states_8_0,
							"dsl.Greenhouse.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRowSensor
entryRuleRowSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowSensorRule()); }
	iv_ruleRowSensor=ruleRowSensor
	{ $current=$iv_ruleRowSensor.current; }
	EOF;

// Rule RowSensor
ruleRowSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRowSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='has'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowSensorAccess().getHasKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowSensorAccess().getVariableVariableParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowSensorRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"dsl.Greenhouse.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='and'
		{
			newLeafNode(otherlv_4, grammarAccess.getRowSensorAccess().getAndKeyword_4());
		}
		otherlv_5='states'
		{
			newLeafNode(otherlv_5, grammarAccess.getRowSensorAccess().getStatesKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowSensorAccess().getStatesStateParserRuleCall_6_0());
				}
				lv_states_6_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowSensorRule());
					}
					add(
						$current,
						"states",
						lv_states_6_0,
						"dsl.Greenhouse.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getRowSensorAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowSensorAccess().getStatesStateParserRuleCall_7_1_0());
					}
					lv_states_8_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowSensorRule());
						}
						add(
							$current,
							"states",
							lv_states_8_0,
							"dsl.Greenhouse.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getWhenKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getStateAccess().getVariableVariableCrossReference_2_0());
				}
			)
		)
		(
			(
				(
					lv_op_3_1='<'
					{
						newLeafNode(lv_op_3_1, grammarAccess.getStateAccess().getOpLessThanSignKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_1, null);
					}
					    |
					lv_op_3_2='>'
					{
						newLeafNode(lv_op_3_2, grammarAccess.getStateAccess().getOpGreaterThanSignKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_2, null);
					}
					    |
					lv_op_3_3='='
					{
						newLeafNode(lv_op_3_3, grammarAccess.getStateAccess().getOpEqualsSignKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_3, null);
					}
				)
			)
		)
		(
			(
				lv_threshold_4_0=RULE_INT
				{
					newLeafNode(lv_threshold_4_0, grammarAccess.getStateAccess().getThresholdINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"threshold",
						lv_threshold_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='variable'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVariableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionAccess().getWhenKeyword_1());
		}
		otherlv_2='receiving'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionAccess().getReceivingKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getTriggerTriggerParserRuleCall_3_0());
				}
				lv_trigger_3_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_3_0,
						"dsl.Greenhouse.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='by'
		{
			newLeafNode(otherlv_4, grammarAccess.getActionAccess().getByKeyword_4());
		}
		otherlv_5='condition'
		{
			newLeafNode(otherlv_5, grammarAccess.getActionAccess().getConditionKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getConditionConditionParserRuleCall_6_0());
				}
				lv_condition_6_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_6_0,
						"dsl.Greenhouse.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getActionAccess().getToKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getValueValueParserRuleCall_8_0());
				}
				lv_value_8_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"dsl.Greenhouse.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTriggerAccess().getTriggerAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTriggerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTriggerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConditionAccess().getConditionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConditionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValueAccess().getValueAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_INT
				{
					newLeafNode(lv_name_1_0, grammarAccess.getValueAccess().getNameINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleRowRuleSet
entryRuleRowRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRuleSetRule()); }
	iv_ruleRowRuleSet=ruleRowRuleSet
	{ $current=$iv_ruleRowRuleSet.current; }
	EOF;

// Rule RowRuleSet
ruleRowRuleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowRuleSetAccess().getRuleKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRowRuleSetAccess().getActuatorRowActuatorCrossReference_1_0());
				}
			)
		)
		otherlv_2='set'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowRuleSetAccess().getSetKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getRowRuleSetAccess().getActionActionCrossReference_3_0());
				}
			)
		)
		otherlv_4='when'
		{
			newLeafNode(otherlv_4, grammarAccess.getRowRuleSetAccess().getWhenKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getRowRuleSetAccess().getSensorRowSensorCrossReference_5_0());
				}
			)
		)
		otherlv_6='is'
		{
			newLeafNode(otherlv_6, grammarAccess.getRowRuleSetAccess().getIsKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRuleSetRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getRowRuleSetAccess().getStateStateCrossReference_7_0());
				}
			)
		)
	)
;

// Entry rule entryRuleGreenhouseRuleSet
entryRuleGreenhouseRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreenhouseRuleSetRule()); }
	iv_ruleGreenhouseRuleSet=ruleGreenhouseRuleSet
	{ $current=$iv_ruleGreenhouseRuleSet.current; }
	EOF;

// Rule GreenhouseRuleSet
ruleGreenhouseRuleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='global'
		{
			newLeafNode(otherlv_0, grammarAccess.getGreenhouseRuleSetAccess().getGlobalKeyword_0());
		}
		otherlv_1='rule'
		{
			newLeafNode(otherlv_1, grammarAccess.getGreenhouseRuleSetAccess().getRuleKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getGreenhouseRuleSetAccess().getActuatorGreenhouseActuatorCrossReference_2_0());
				}
			)
		)
		otherlv_3='set'
		{
			newLeafNode(otherlv_3, grammarAccess.getGreenhouseRuleSetAccess().getSetKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getGreenhouseRuleSetAccess().getActionActionCrossReference_4_0());
				}
			)
		)
		otherlv_5='when'
		{
			newLeafNode(otherlv_5, grammarAccess.getGreenhouseRuleSetAccess().getWhenKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getGreenhouseRuleSetAccess().getSensorGreenhouseSensorCrossReference_6_0());
				}
			)
		)
		otherlv_7='is'
		{
			newLeafNode(otherlv_7, grammarAccess.getGreenhouseRuleSetAccess().getIsKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGreenhouseRuleSetRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getGreenhouseRuleSetAccess().getStateStateCrossReference_8_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
