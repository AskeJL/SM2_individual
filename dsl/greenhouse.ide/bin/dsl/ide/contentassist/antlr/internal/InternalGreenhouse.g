/*
 * generated by Xtext 2.25.0
 */
grammar InternalGreenhouse;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dsl.services.GreenhouseGrammarAccess;

}
@parser::members {
	private GreenhouseGrammarAccess grammarAccess;

	public void setGrammarAccess(GreenhouseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreenhouse
entryRuleGreenhouse
:
{ before(grammarAccess.getGreenhouseRule()); }
	 ruleGreenhouse
{ after(grammarAccess.getGreenhouseRule()); } 
	 EOF 
;

// Rule Greenhouse
ruleGreenhouse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreenhouseAccess().getGroup()); }
		(rule__Greenhouse__Group__0)
		{ after(grammarAccess.getGreenhouseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreenhouseElement
entryRuleGreenhouseElement
:
{ before(grammarAccess.getGreenhouseElementRule()); }
	 ruleGreenhouseElement
{ after(grammarAccess.getGreenhouseElementRule()); } 
	 EOF 
;

// Rule GreenhouseElement
ruleGreenhouseElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreenhouseElementAccess().getAlternatives()); }
		(rule__GreenhouseElement__Alternatives)
		{ after(grammarAccess.getGreenhouseElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRowElement
entryRuleRowElement
:
{ before(grammarAccess.getRowElementRule()); }
	 ruleRowElement
{ after(grammarAccess.getRowElementRule()); } 
	 EOF 
;

// Rule RowElement
ruleRowElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowElementAccess().getAlternatives()); }
		(rule__RowElement__Alternatives)
		{ after(grammarAccess.getRowElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreenhouseActuator
entryRuleGreenhouseActuator
:
{ before(grammarAccess.getGreenhouseActuatorRule()); }
	 ruleGreenhouseActuator
{ after(grammarAccess.getGreenhouseActuatorRule()); } 
	 EOF 
;

// Rule GreenhouseActuator
ruleGreenhouseActuator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreenhouseActuatorAccess().getGroup()); }
		(rule__GreenhouseActuator__Group__0)
		{ after(grammarAccess.getGreenhouseActuatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActuator
entryRuleActuator
:
{ before(grammarAccess.getActuatorRule()); }
	 ruleActuator
{ after(grammarAccess.getActuatorRule()); } 
	 EOF 
;

// Rule Actuator
ruleActuator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActuatorAccess().getGroup()); }
		(rule__Actuator__Group__0)
		{ after(grammarAccess.getActuatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreenhouseSensor
entryRuleGreenhouseSensor
:
{ before(grammarAccess.getGreenhouseSensorRule()); }
	 ruleGreenhouseSensor
{ after(grammarAccess.getGreenhouseSensorRule()); } 
	 EOF 
;

// Rule GreenhouseSensor
ruleGreenhouseSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreenhouseSensorAccess().getGroup()); }
		(rule__GreenhouseSensor__Group__0)
		{ after(grammarAccess.getGreenhouseSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup()); }
		(rule__Trigger__Group__0)
		{ after(grammarAccess.getTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetting
entryRuleSetting
:
{ before(grammarAccess.getSettingRule()); }
	 ruleSetting
{ after(grammarAccess.getSettingRule()); } 
	 EOF 
;

// Rule Setting
ruleSetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSettingAccess().getGroup()); }
		(rule__Setting__Group__0)
		{ after(grammarAccess.getSettingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getGroup()); }
		(rule__Value__Group__0)
		{ after(grammarAccess.getValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleSet
entryRuleRuleSet
:
{ before(grammarAccess.getRuleSetRule()); }
	 ruleRuleSet
{ after(grammarAccess.getRuleSetRule()); } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleSetAccess().getGroup()); }
		(rule__RuleSet__Group__0)
		{ after(grammarAccess.getRuleSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseElementAccess().getGreenhouseSensorParserRuleCall_0()); }
		ruleGreenhouseSensor
		{ after(grammarAccess.getGreenhouseElementAccess().getGreenhouseSensorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGreenhouseElementAccess().getGreenhouseActuatorParserRuleCall_1()); }
		ruleGreenhouseActuator
		{ after(grammarAccess.getGreenhouseElementAccess().getGreenhouseActuatorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGreenhouseElementAccess().getRuleSetParserRuleCall_2()); }
		ruleRuleSet
		{ after(grammarAccess.getGreenhouseElementAccess().getRuleSetParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowElementAccess().getSensorParserRuleCall_0()); }
		ruleSensor
		{ after(grammarAccess.getRowElementAccess().getSensorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRowElementAccess().getActuatorParserRuleCall_1()); }
		ruleActuator
		{ after(grammarAccess.getRowElementAccess().getActuatorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__OpAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getOpLessThanSignKeyword_3_0_0()); }
		'<'
		{ after(grammarAccess.getStateAccess().getOpLessThanSignKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getOpGreaterThanSignKeyword_3_0_1()); }
		'>'
		{ after(grammarAccess.getStateAccess().getOpGreaterThanSignKeyword_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getOpEqualsSignKeyword_3_0_2()); }
		'='
		{ after(grammarAccess.getStateAccess().getOpEqualsSignKeyword_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSystemKeyword_0()); }
	'system'
	{ after(grammarAccess.getModelAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGreenhousesAssignment_2()); }
	(rule__Model__GreenhousesAssignment_2)*
	{ after(grammarAccess.getModelAccess().getGreenhousesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Greenhouse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greenhouse__Group__0__Impl
	rule__Greenhouse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseAccess().getGreenhouseKeyword_0()); }
	'greenhouse'
	{ after(grammarAccess.getGreenhouseAccess().getGreenhouseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greenhouse__Group__1__Impl
	rule__Greenhouse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseAccess().getNameAssignment_1()); }
	(rule__Greenhouse__NameAssignment_1)
	{ after(grammarAccess.getGreenhouseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greenhouse__Group__2__Impl
	rule__Greenhouse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getGreenhouseAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greenhouse__Group__3__Impl
	rule__Greenhouse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseAccess().getRowAssignment_3()); }
	(rule__Greenhouse__RowAssignment_3)*
	{ after(grammarAccess.getGreenhouseAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greenhouse__Group__4__Impl
	rule__Greenhouse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseAccess().getElementsAssignment_4()); }
	(rule__Greenhouse__ElementsAssignment_4)*
	{ after(grammarAccess.getGreenhouseAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greenhouse__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getGreenhouseAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRowKeyword_0()); }
	'row'
	{ after(grammarAccess.getRowAccess().getRowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getNameAssignment_1()); }
	(rule__Row__NameAssignment_1)
	{ after(grammarAccess.getRowAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__2__Impl
	rule__Row__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getIncludesKeyword_2()); }
	'includes'
	{ after(grammarAccess.getRowAccess().getIncludesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__3__Impl
	rule__Row__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getRowAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__4__Impl
	rule__Row__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getElementsAssignment_4()); }
	(rule__Row__ElementsAssignment_4)*
	{ after(grammarAccess.getRowAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getRowAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreenhouseActuator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group__0__Impl
	rule__GreenhouseActuator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getGlobalKeyword_0()); }
	'global'
	{ after(grammarAccess.getGreenhouseActuatorAccess().getGlobalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group__1__Impl
	rule__GreenhouseActuator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getActuatorKeyword_1()); }
	'actuator'
	{ after(grammarAccess.getGreenhouseActuatorAccess().getActuatorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group__2__Impl
	rule__GreenhouseActuator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getNameAssignment_2()); }
	(rule__GreenhouseActuator__NameAssignment_2)
	{ after(grammarAccess.getGreenhouseActuatorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group__3__Impl
	rule__GreenhouseActuator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getGroup_3()); }
	(rule__GreenhouseActuator__Group_3__0)?
	{ after(grammarAccess.getGreenhouseActuatorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getGroup_4()); }
	(rule__GreenhouseActuator__Group_4__0)*
	{ after(grammarAccess.getGreenhouseActuatorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreenhouseActuator__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group_3__0__Impl
	rule__GreenhouseActuator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getCanKeyword_3_0()); }
	'can'
	{ after(grammarAccess.getGreenhouseActuatorAccess().getCanKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getActionAssignment_3_1()); }
	(rule__GreenhouseActuator__ActionAssignment_3_1)
	{ after(grammarAccess.getGreenhouseActuatorAccess().getActionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreenhouseActuator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group_4__0__Impl
	rule__GreenhouseActuator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getGreenhouseActuatorAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group_4__1__Impl
	rule__GreenhouseActuator__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getCanKeyword_4_1()); }
	'can'
	{ after(grammarAccess.getGreenhouseActuatorAccess().getCanKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseActuator__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseActuatorAccess().getActionAssignment_4_2()); }
	(rule__GreenhouseActuator__ActionAssignment_4_2)
	{ after(grammarAccess.getGreenhouseActuatorAccess().getActionAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__0__Impl
	rule__Actuator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }
	'actuator'
	{ after(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__1__Impl
	rule__Actuator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getNameAssignment_1()); }
	(rule__Actuator__NameAssignment_1)
	{ after(grammarAccess.getActuatorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__2__Impl
	rule__Actuator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getGroup_2()); }
	(rule__Actuator__Group_2__0)?
	{ after(grammarAccess.getActuatorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getGroup_3()); }
	(rule__Actuator__Group_3__0)*
	{ after(grammarAccess.getActuatorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_2__0__Impl
	rule__Actuator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getCanKeyword_2_0()); }
	'can'
	{ after(grammarAccess.getActuatorAccess().getCanKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActionAssignment_2_1()); }
	(rule__Actuator__ActionAssignment_2_1)
	{ after(grammarAccess.getActuatorAccess().getActionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_3__0__Impl
	rule__Actuator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getActuatorAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_3__1__Impl
	rule__Actuator__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getCanKeyword_3_1()); }
	'can'
	{ after(grammarAccess.getActuatorAccess().getCanKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActionAssignment_3_2()); }
	(rule__Actuator__ActionAssignment_3_2)
	{ after(grammarAccess.getActuatorAccess().getActionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreenhouseSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__0__Impl
	rule__GreenhouseSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getGlobalKeyword_0()); }
	'global'
	{ after(grammarAccess.getGreenhouseSensorAccess().getGlobalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__1__Impl
	rule__GreenhouseSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getSensorKeyword_1()); }
	'sensor'
	{ after(grammarAccess.getGreenhouseSensorAccess().getSensorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__2__Impl
	rule__GreenhouseSensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getNameAssignment_2()); }
	(rule__GreenhouseSensor__NameAssignment_2)
	{ after(grammarAccess.getGreenhouseSensorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__3__Impl
	rule__GreenhouseSensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getHasKeyword_3()); }
	'has'
	{ after(grammarAccess.getGreenhouseSensorAccess().getHasKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__4__Impl
	rule__GreenhouseSensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getValueKeyword_4()); }
	'value'
	{ after(grammarAccess.getGreenhouseSensorAccess().getValueKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__5__Impl
	rule__GreenhouseSensor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getVariableAssignment_5()); }
	(rule__GreenhouseSensor__VariableAssignment_5)
	{ after(grammarAccess.getGreenhouseSensorAccess().getVariableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__6__Impl
	rule__GreenhouseSensor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getStatesAssignment_6()); }
	(rule__GreenhouseSensor__StatesAssignment_6)
	{ after(grammarAccess.getGreenhouseSensorAccess().getStatesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getGroup_7()); }
	(rule__GreenhouseSensor__Group_7__0)*
	{ after(grammarAccess.getGreenhouseSensorAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GreenhouseSensor__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group_7__0__Impl
	rule__GreenhouseSensor__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getGreenhouseSensorAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GreenhouseSensor__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreenhouseSensorAccess().getStatesAssignment_7_1()); }
	(rule__GreenhouseSensor__StatesAssignment_7_1)
	{ after(grammarAccess.getGreenhouseSensorAccess().getStatesAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
	'sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameAssignment_1()); }
	(rule__Sensor__NameAssignment_1)
	{ after(grammarAccess.getSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getHasKeyword_2()); }
	'has'
	{ after(grammarAccess.getSensorAccess().getHasKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getVariableAssignment_3()); }
	(rule__Sensor__VariableAssignment_3)
	{ after(grammarAccess.getSensorAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
	rule__Sensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getAndKeyword_4()); }
	'and'
	{ after(grammarAccess.getSensorAccess().getAndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__5__Impl
	rule__Sensor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getStatesKeyword_5()); }
	'states'
	{ after(grammarAccess.getSensorAccess().getStatesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__6__Impl
	rule__Sensor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getStatesAssignment_6()); }
	(rule__Sensor__StatesAssignment_6)
	{ after(grammarAccess.getSensorAccess().getStatesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getGroup_7()); }
	(rule__Sensor__Group_7__0)*
	{ after(grammarAccess.getSensorAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_7__0__Impl
	rule__Sensor__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getSensorAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getStatesAssignment_7_1()); }
	(rule__Sensor__StatesAssignment_7_1)
	{ after(grammarAccess.getSensorAccess().getStatesAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_0()); }
	(rule__State__NameAssignment_0)
	{ after(grammarAccess.getStateAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getWhenKeyword_1()); }
	'when'
	{ after(grammarAccess.getStateAccess().getWhenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getVariableAssignment_2()); }
	(rule__State__VariableAssignment_2)
	{ after(grammarAccess.getStateAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getOpAssignment_3()); }
	(rule__State__OpAssignment_3)
	{ after(grammarAccess.getStateAccess().getOpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getThresholdAssignment_4()); }
	(rule__State__ThresholdAssignment_4)
	{ after(grammarAccess.getStateAccess().getThresholdAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableKeyword_0()); }
	'variable'
	{ after(grammarAccess.getVariableAccess().getVariableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_0()); }
	(rule__Action__NameAssignment_0)
	{ after(grammarAccess.getActionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getWhenKeyword_1()); }
	'when'
	{ after(grammarAccess.getActionAccess().getWhenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getReceivingKeyword_2()); }
	'receiving'
	{ after(grammarAccess.getActionAccess().getReceivingKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getTriggerAssignment_3()); }
	(rule__Action__TriggerAssignment_3)
	{ after(grammarAccess.getActionAccess().getTriggerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__4__Impl
	rule__Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getByKeyword_4()); }
	'by'
	{ after(grammarAccess.getActionAccess().getByKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__5__Impl
	rule__Action__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSettingKeyword_5()); }
	'setting'
	{ after(grammarAccess.getActionAccess().getSettingKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__6__Impl
	rule__Action__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSettingAssignment_6()); }
	(rule__Action__SettingAssignment_6)
	{ after(grammarAccess.getActionAccess().getSettingAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__7__Impl
	rule__Action__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getToKeyword_7()); }
	'to'
	{ after(grammarAccess.getActionAccess().getToKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getValueAssignment_8()); }
	(rule__Action__ValueAssignment_8)
	{ after(grammarAccess.getActionAccess().getValueAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getTriggerAction_0()); }
	()
	{ after(grammarAccess.getTriggerAccess().getTriggerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getNameAssignment_1()); }
	(rule__Trigger__NameAssignment_1)
	{ after(grammarAccess.getTriggerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Setting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Setting__Group__0__Impl
	rule__Setting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSettingAccess().getSettingAction_0()); }
	()
	{ after(grammarAccess.getSettingAccess().getSettingAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Setting__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSettingAccess().getNameAssignment_1()); }
	(rule__Setting__NameAssignment_1)
	{ after(grammarAccess.getSettingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueAction_0()); }
	()
	{ after(grammarAccess.getValueAccess().getValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getNameAssignment_1()); }
	(rule__Value__NameAssignment_1)
	{ after(grammarAccess.getValueAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__0__Impl
	rule__RuleSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleSetAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__1__Impl
	rule__RuleSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getActuatorAssignment_1()); }
	(rule__RuleSet__ActuatorAssignment_1)
	{ after(grammarAccess.getRuleSetAccess().getActuatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__2__Impl
	rule__RuleSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getSetKeyword_2()); }
	'set'
	{ after(grammarAccess.getRuleSetAccess().getSetKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__3__Impl
	rule__RuleSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getActionAssignment_3()); }
	(rule__RuleSet__ActionAssignment_3)
	{ after(grammarAccess.getRuleSetAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__4__Impl
	rule__RuleSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getWhenKeyword_4()); }
	'when'
	{ after(grammarAccess.getRuleSetAccess().getWhenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__5__Impl
	rule__RuleSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getSensorAssignment_5()); }
	(rule__RuleSet__SensorAssignment_5)
	{ after(grammarAccess.getRuleSetAccess().getSensorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__6__Impl
	rule__RuleSet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getIsKeyword_6()); }
	'is'
	{ after(grammarAccess.getRuleSetAccess().getIsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getStateAssignment_7()); }
	(rule__RuleSet__StateAssignment_7)
	{ after(grammarAccess.getRuleSetAccess().getStateAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GreenhousesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreenhousesGreenhouseParserRuleCall_2_0()); }
		ruleGreenhouse
		{ after(grammarAccess.getModelAccess().getGreenhousesGreenhouseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGreenhouseAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseAccess().getRowRowParserRuleCall_3_0()); }
		ruleRow
		{ after(grammarAccess.getGreenhouseAccess().getRowRowParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greenhouse__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseAccess().getElementsGreenhouseElementParserRuleCall_4_0()); }
		ruleGreenhouseElement
		{ after(grammarAccess.getGreenhouseAccess().getElementsGreenhouseElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getElementsRowElementParserRuleCall_4_0()); }
		ruleRowElement
		{ after(grammarAccess.getRowAccess().getElementsRowElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseActuatorAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getGreenhouseActuatorAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__ActionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_3_1_0()); }
		ruleAction
		{ after(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseActuator__ActionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_4_2_0()); }
		ruleAction
		{ after(grammarAccess.getGreenhouseActuatorAccess().getActionActionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__ActionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getActionActionParserRuleCall_2_1_0()); }
		ruleAction
		{ after(grammarAccess.getActuatorAccess().getActionActionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__ActionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getActionActionParserRuleCall_3_2_0()); }
		ruleAction
		{ after(grammarAccess.getActuatorAccess().getActionActionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseSensorAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getGreenhouseSensorAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__VariableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseSensorAccess().getVariableVariableParserRuleCall_5_0()); }
		ruleVariable
		{ after(grammarAccess.getGreenhouseSensorAccess().getVariableVariableParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__StatesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_6_0()); }
		ruleState
		{ after(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GreenhouseSensor__StatesAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_7_1_0()); }
		ruleState
		{ after(grammarAccess.getGreenhouseSensorAccess().getStatesStateParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getVariableVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getSensorAccess().getVariableVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__StatesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getStatesStateParserRuleCall_6_0()); }
		ruleState
		{ after(grammarAccess.getSensorAccess().getStatesStateParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__StatesAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getStatesStateParserRuleCall_7_1_0()); }
		ruleState
		{ after(grammarAccess.getSensorAccess().getStatesStateParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getVariableVariableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getStateAccess().getVariableVariableIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStateAccess().getVariableVariableIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getStateAccess().getVariableVariableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__OpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getOpAlternatives_3_0()); }
		(rule__State__OpAlternatives_3_0)
		{ after(grammarAccess.getStateAccess().getOpAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ThresholdAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getThresholdINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getStateAccess().getThresholdINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TriggerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTriggerTriggerParserRuleCall_3_0()); }
		ruleTrigger
		{ after(grammarAccess.getActionAccess().getTriggerTriggerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__SettingAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getSettingSettingParserRuleCall_6_0()); }
		ruleSetting
		{ after(grammarAccess.getActionAccess().getSettingSettingParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ValueAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getValueValueParserRuleCall_8_0()); }
		ruleValue
		{ after(grammarAccess.getActionAccess().getValueValueParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTriggerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSettingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSettingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNameINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getNameINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__ActuatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getActuatorActuatorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRuleSetAccess().getActuatorActuatorIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleSetAccess().getActuatorActuatorIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRuleSetAccess().getActuatorActuatorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getActionActionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRuleSetAccess().getActionActionIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleSetAccess().getActionActionIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRuleSetAccess().getActionActionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__SensorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getSensorSensorCrossReference_5_0()); }
		(
			{ before(grammarAccess.getRuleSetAccess().getSensorSensorIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleSetAccess().getSensorSensorIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getRuleSetAccess().getSensorSensorCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__StateAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getStateStateCrossReference_7_0()); }
		(
			{ before(grammarAccess.getRuleSetAccess().getStateStateIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleSetAccess().getStateStateIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getRuleSetAccess().getStateStateCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
